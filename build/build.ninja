# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.25

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: DreamEngine
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = /mnt/sdb1/Linux/Minecraft$ CPP/build/
# =============================================================================
# Object build statements for STATIC_LIBRARY target Window_Game


#############################################
# Order-only phony target for Window_Game

build cmake_object_order_depends_target_Window_Game: phony || CMakeFiles/Window_Game.dir

build CMakeFiles/Window_Game.dir/DreamEngine/Window/Window_Game.cpp.o: CXX_COMPILER__Window_Game_Debug /mnt/sdb1/Linux/Minecraft$ CPP/DreamEngine/Window/Window_Game.cpp || cmake_object_order_depends_target_Window_Game
  DEP_FILE = CMakeFiles/Window_Game.dir/DreamEngine/Window/Window_Game.cpp.o.d
  FLAGS = -g
  OBJECT_DIR = CMakeFiles/Window_Game.dir
  OBJECT_FILE_DIR = CMakeFiles/Window_Game.dir/DreamEngine/Window


# =============================================================================
# Link build statements for STATIC_LIBRARY target Window_Game


#############################################
# Link the static library libWindow_Game.a

build libWindow_Game.a: CXX_STATIC_LIBRARY_LINKER__Window_Game_Debug CMakeFiles/Window_Game.dir/DreamEngine/Window/Window_Game.cpp.o
  LANGUAGE_COMPILE_FLAGS = -g
  OBJECT_DIR = CMakeFiles/Window_Game.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = libWindow_Game.a
  TARGET_PDB = Window_Game.a.dbg

# =============================================================================
# Object build statements for STATIC_LIBRARY target Events


#############################################
# Order-only phony target for Events

build cmake_object_order_depends_target_Events: phony || CMakeFiles/Events.dir

build CMakeFiles/Events.dir/DreamEngine/Window/Events.cpp.o: CXX_COMPILER__Events_Debug /mnt/sdb1/Linux/Minecraft$ CPP/DreamEngine/Window/Events.cpp || cmake_object_order_depends_target_Events
  DEP_FILE = CMakeFiles/Events.dir/DreamEngine/Window/Events.cpp.o.d
  FLAGS = -g
  OBJECT_DIR = CMakeFiles/Events.dir
  OBJECT_FILE_DIR = CMakeFiles/Events.dir/DreamEngine/Window


# =============================================================================
# Link build statements for STATIC_LIBRARY target Events


#############################################
# Link the static library libEvents.a

build libEvents.a: CXX_STATIC_LIBRARY_LINKER__Events_Debug CMakeFiles/Events.dir/DreamEngine/Window/Events.cpp.o
  LANGUAGE_COMPILE_FLAGS = -g
  OBJECT_DIR = CMakeFiles/Events.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = libEvents.a
  TARGET_PDB = Events.a.dbg

# =============================================================================
# Object build statements for STATIC_LIBRARY target graphics


#############################################
# Order-only phony target for graphics

build cmake_object_order_depends_target_graphics: phony || CMakeFiles/graphics.dir

build CMakeFiles/graphics.dir/DreamEngine/graphics/Shader.cpp.o: CXX_COMPILER__graphics_Debug /mnt/sdb1/Linux/Minecraft$ CPP/DreamEngine/graphics/Shader.cpp || cmake_object_order_depends_target_graphics
  DEP_FILE = CMakeFiles/graphics.dir/DreamEngine/graphics/Shader.cpp.o.d
  FLAGS = -g
  OBJECT_DIR = CMakeFiles/graphics.dir
  OBJECT_FILE_DIR = CMakeFiles/graphics.dir/DreamEngine/graphics


# =============================================================================
# Link build statements for STATIC_LIBRARY target graphics


#############################################
# Link the static library libgraphics.a

build libgraphics.a: CXX_STATIC_LIBRARY_LINKER__graphics_Debug CMakeFiles/graphics.dir/DreamEngine/graphics/Shader.cpp.o
  LANGUAGE_COMPILE_FLAGS = -g
  OBJECT_DIR = CMakeFiles/graphics.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = libgraphics.a
  TARGET_PDB = graphics.a.dbg

# =============================================================================
# Object build statements for EXECUTABLE target DreamEngine


#############################################
# Order-only phony target for DreamEngine

build cmake_object_order_depends_target_DreamEngine: phony || cmake_object_order_depends_target_Events cmake_object_order_depends_target_Window_Game cmake_object_order_depends_target_graphics

build CMakeFiles/DreamEngine.dir/DreamEngine/Main.cpp.o: CXX_COMPILER__DreamEngine_Debug /mnt/sdb1/Linux/Minecraft$ CPP/DreamEngine/Main.cpp || cmake_object_order_depends_target_DreamEngine
  DEP_FILE = CMakeFiles/DreamEngine.dir/DreamEngine/Main.cpp.o.d
  FLAGS = -g
  OBJECT_DIR = CMakeFiles/DreamEngine.dir
  OBJECT_FILE_DIR = CMakeFiles/DreamEngine.dir/DreamEngine


# =============================================================================
# Link build statements for EXECUTABLE target DreamEngine


#############################################
# Link the executable DreamEngine

build DreamEngine: CXX_EXECUTABLE_LINKER__DreamEngine_Debug CMakeFiles/DreamEngine.dir/DreamEngine/Main.cpp.o | /usr/lib/libGLEW.so /usr/lib/libglfw.so libWindow_Game.a libEvents.a libgraphics.a /usr/lib/libGLX.so /usr/lib/libOpenGL.so || libEvents.a libWindow_Game.a libgraphics.a
  FLAGS = -g
  LINK_LIBRARIES = /usr/lib/libGLEW.so  /usr/lib/libglfw.so  libWindow_Game.a  libEvents.a  libgraphics.a  /usr/lib/libGLX.so  /usr/lib/libOpenGL.so
  OBJECT_DIR = CMakeFiles/DreamEngine.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = DreamEngine
  TARGET_PDB = DreamEngine.dbg


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd "/mnt/sdb1/Linux/Minecraft CPP/build" && /usr/bin/ccmake -S"/mnt/sdb1/Linux/Minecraft CPP" -B"/mnt/sdb1/Linux/Minecraft CPP/build"
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd "/mnt/sdb1/Linux/Minecraft CPP/build" && /usr/bin/cmake --regenerate-during-build -S"/mnt/sdb1/Linux/Minecraft CPP" -B"/mnt/sdb1/Linux/Minecraft CPP/build"
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util

# =============================================================================
# Target aliases.

build Events: phony libEvents.a

build Window_Game: phony libWindow_Game.a

build graphics: phony libgraphics.a

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: /mnt/sdb1/Linux/Minecraft CPP/build

build all: phony libWindow_Game.a libEvents.a libgraphics.a DreamEngine

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | /mnt/sdb1/Linux/Minecraft$ CPP/CMakeLists.txt /usr/share/cmake/Modules/CMakeCInformation.cmake /usr/share/cmake/Modules/CMakeCXXInformation.cmake /usr/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake/Modules/CMakeGenericSystem.cmake /usr/share/cmake/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake/Modules/CMakeLanguageInformation.cmake /usr/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake/Modules/Compiler/Clang-C.cmake /usr/share/cmake/Modules/Compiler/Clang-CXX.cmake /usr/share/cmake/Modules/Compiler/Clang.cmake /usr/share/cmake/Modules/Compiler/GNU.cmake /usr/share/cmake/Modules/FindGLEW.cmake /usr/share/cmake/Modules/FindOpenGL.cmake /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake /usr/share/cmake/Modules/FindPackageMessage.cmake /usr/share/cmake/Modules/Platform/Linux-Clang-C.cmake /usr/share/cmake/Modules/Platform/Linux-Clang-CXX.cmake /usr/share/cmake/Modules/Platform/Linux-GNU-C.cmake /usr/share/cmake/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake/Modules/Platform/Linux-GNU.cmake /usr/share/cmake/Modules/Platform/Linux.cmake /usr/share/cmake/Modules/Platform/UnixPaths.cmake /usr/share/cmake/Modules/SelectLibraryConfigurations.cmake CMakeCache.txt CMakeFiles/3.25.1/CMakeCCompiler.cmake CMakeFiles/3.25.1/CMakeCXXCompiler.cmake CMakeFiles/3.25.1/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build /mnt/sdb1/Linux/Minecraft$ CPP/CMakeLists.txt /usr/share/cmake/Modules/CMakeCInformation.cmake /usr/share/cmake/Modules/CMakeCXXInformation.cmake /usr/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake/Modules/CMakeGenericSystem.cmake /usr/share/cmake/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake/Modules/CMakeLanguageInformation.cmake /usr/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake/Modules/Compiler/Clang-C.cmake /usr/share/cmake/Modules/Compiler/Clang-CXX.cmake /usr/share/cmake/Modules/Compiler/Clang.cmake /usr/share/cmake/Modules/Compiler/GNU.cmake /usr/share/cmake/Modules/FindGLEW.cmake /usr/share/cmake/Modules/FindOpenGL.cmake /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake /usr/share/cmake/Modules/FindPackageMessage.cmake /usr/share/cmake/Modules/Platform/Linux-Clang-C.cmake /usr/share/cmake/Modules/Platform/Linux-Clang-CXX.cmake /usr/share/cmake/Modules/Platform/Linux-GNU-C.cmake /usr/share/cmake/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake/Modules/Platform/Linux-GNU.cmake /usr/share/cmake/Modules/Platform/Linux.cmake /usr/share/cmake/Modules/Platform/UnixPaths.cmake /usr/share/cmake/Modules/SelectLibraryConfigurations.cmake CMakeCache.txt CMakeFiles/3.25.1/CMakeCCompiler.cmake CMakeFiles/3.25.1/CMakeCXXCompiler.cmake CMakeFiles/3.25.1/CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
